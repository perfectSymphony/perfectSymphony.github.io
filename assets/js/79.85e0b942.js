(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{436:function(e,t,r){"use strict";r.r(t);var s=r(45),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"cannot-assign-to-read-only-property-exports-of-object"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cannot-assign-to-read-only-property-exports-of-object"}},[e._v("#")]),e._v(" Cannot assign to read only property exports of object")]),e._v(" "),r("blockquote",[r("p",[e._v("vue项目打包后生成的dist文件部署到GitHub page上之后，访问时，报"),r("code",[e._v("Uncaught TypeError: Cannot assign to read only property 'exports' of object '#<Object>'")])])]),e._v(" "),r("h4",{attrs:{id:"原因"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#原因"}},[e._v("#")]),e._v(" 原因：")]),e._v(" "),r("p",[e._v("webpack 2中不允许混用import和module.exports")]),e._v(" "),r("h4",{attrs:{id:"解决办法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#解决办法"}},[e._v("#")]),e._v(" 解决办法：")]),e._v(" "),r("p",[e._v("一、每个页面模块目录通过一个 index.js 主入口来导出（"),r("code",[e._v("module.exports")]),e._v("）对应的vue文件，然后 "),r("code",[e._v("router.js")]),e._v(" 中通过 "),r("code",[e._v("require")]),e._v(" 方法去引入资源。")]),e._v(" "),r("p",[e._v("这一做法是没毛病的，因为这是组织（webpack 2）允许的。")]),e._v(" "),r("p",[e._v("二、如果好好的"),r("code",[e._v("require")]),e._v("不用，非要用 "),r("code",[e._v("import")]),e._v(" 那么请不要和 "),r("code",[e._v("module.exports")]),e._v(" 混合服用，因为这是组织不允许的，此时便会报标题的错。（"),r("code",[e._v("Uncaught TypeError: Cannot assign to read only property 'exports' of object '#<Object>'")]),e._v("）")]),e._v(" "),r("p",[e._v("三、如果你还是要用 import 方法来引入资源的话，你可以放弃 module.exports ，直接引入vue文件路径，因为 import 和 export default 是组织运行的。")]),e._v(" "),r("p",[e._v("四、使用"),r("code",[e._v("babel")]),e._v(" 的 "),r("a",{attrs:{href:"https://github.com/airbnb/babel-plugin-dynamic-import-node",target:"_blank",rel:"noopener noreferrer"}},[e._v("plugins babel-plugin-dynamic-import-node"),r("OutboundLink")],1),e._v("。它只做一件事就是将所有的"),r("code",[e._v("import()")]),e._v("转化为"),r("code",[e._v("require()")]),e._v("，这样就可以用这个插件将所有异步组件都用同步的方式引入，并结合 "),r("a",{attrs:{href:"https://babeljs.io/docs/en/config-files/#env-option",target:"_blank",rel:"noopener noreferrer"}},[e._v("BABEL_ENV"),r("OutboundLink")],1),e._v(" 这个"),r("code",[e._v("babel")]),e._v("环境变量，让它只作用于开发环境下，在开发环境中将所有"),r("code",[e._v("import()")]),e._v("转化为"),r("code",[e._v("require()")]),e._v("，这种方案解决了之前重复打包的问题，同时对代码的侵入性也很小，你平时写路由的时候只需要按照官方"),r("a",{attrs:{href:"https://router.vuejs.org/zh/guide/advanced/lazy-loading.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("文档"),r("OutboundLink")],1),e._v("路由懒加载的方式就可以了，其它的都交给"),r("code",[e._v("babel")]),e._v("来处理，当你不想用这个方案的时候，也只要将它从"),r("code",[e._v("babel")]),e._v("的 "),r("code",[e._v("plugins")]),e._v("中移除就可以了。")]),e._v(" "),r("div",{staticClass:"language-sh line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-sh"}},[r("code",[e._v("module.exports "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  presets: "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n    "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v("'@vue/cli-plugin-babel/preset'")]),e._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(",\n  "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v("'env'")]),r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v("'development'")]),r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v("'plugins'")]),r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),r("span",{pre:!0,attrs:{class:"token string"}},[e._v("'dynamic-import-node'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br"),r("span",{staticClass:"line-number"},[e._v("5")]),r("br"),r("span",{staticClass:"line-number"},[e._v("6")]),r("br"),r("span",{staticClass:"line-number"},[e._v("7")]),r("br"),r("span",{staticClass:"line-number"},[e._v("8")]),r("br"),r("span",{staticClass:"line-number"},[e._v("9")]),r("br"),r("span",{staticClass:"line-number"},[e._v("10")]),r("br")])]),r("h4",{attrs:{id:"结论"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#结论"}},[e._v("#")]),e._v(" 结论：")]),e._v(" "),r("p",[e._v("1、"),r("code",[e._v("exports")]),e._v(" 导出的东西需要 "),r("code",[e._v("require")]),e._v(" 引入！")]),e._v(" "),r("p",[e._v("2、"),r("code",[e._v("export")]),e._v(" 导出的东西需要 "),r("code",[e._v("import")]),e._v(" 引入！")]),e._v(" "),r("p",[e._v("3、在webpack 2中"),r("code",[e._v("不允许混用 import")]),e._v(" 和 "),r("code",[e._v("module.exports")])]),e._v(" "),r("h4",{attrs:{id:"总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结：")]),e._v(" "),r("p",[e._v("其实正确地去理解这个报错的话，就一定要去整明白 require 和 import 的区别！")]),e._v(" "),r("blockquote",[r("p",[e._v("node编程中最重要的思想就是模块化，import和require都是被模块化所使用。"),r("br"),e._v("\n1、遵循规范"),r("br"),e._v(" "),r("code",[e._v("require")]),e._v(" / "),r("code",[e._v("exports")]),e._v(" 是"),r("code",[e._v("CommonJS")]),e._v("的一部分"),r("br"),e._v(" "),r("code",[e._v("import")]),e._v(" / "),r("code",[e._v("export")]),e._v(" 是ES6的新规范，如果要兼容浏览器的话必须转化成es5的语法"),r("br"),e._v("\n2、调用时间"),r("br"),e._v(" "),r("code",[e._v("require")]),e._v(" 是运行时调用，所以"),r("code",[e._v("require")]),e._v("理论上可以运用在代码的任何地方"),r("br"),e._v("\nimport 是编译时调用，所以必须放在文件开头"),r("br"),e._v("\n3、本质"),r("br"),e._v(" "),r("code",[e._v("require")]),e._v(" 是赋值过程，其实"),r("code",[e._v("require")]),e._v("的结果就是对象、数字、字符串、函数等，再把"),r("code",[e._v("require")]),e._v("的结果赋值给某个变量"),r("br"),e._v(" "),r("code",[e._v("import")]),e._v(" 是解构过程，但是目前所有的引擎都还没有实现import，我们在node中使用babel支持ES6，也仅仅是将ES6转码为ES5再执行，"),r("code",[e._v("import")]),e._v("语法会被转码为"),r("code",[e._v("require")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);